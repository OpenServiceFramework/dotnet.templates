# Reference: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet

name: "Build, Publish & Deploy"

on:
  workflow_dispatch:
  push:
    tags: 
    - 'v[1-9].[0-9]+.[0-9]+'

defaults:
  run:
    shell: bash

env:
  NAME: "[prod] ProjectName"
  IMAGE: "service/ProjectName"
  DOTNET_VERSION: "7.0"
  REGISTRY: "asia-southeast1-docker.pkg.dev"

  SDK_IMAGE: "mcr.microsoft.com/dotnet/sdk"
  RUNTIME_IMAGE: "mcr.microsoft.com/dotnet/aspnet"
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  SHORT_SHA: ""
  TAG_NAME: ""
  PLATFORM: "linux/amd64"
  RUNTIME_ENV: "prod"
  BUILD_CONFIG: "release"

jobs:

  build:

    name: "Build"
    runs-on: ubuntu-latest
    environment: "prod"

    steps:

    # Checkout repo & Setup variables
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Setup variables
      id: vars
      run: |-
        echo "SHORT_SHA=${GITHUB_SHA:0:7}" >> $GITHUB_ENV
        echo "TAG_NAME=$(echo $GITHUB_REF | sed -e 's|refs/heads/||' -e 's|refs/tags/||')" >> $GITHUB_ENV

    # Build Docker image
    - name: Build
      run: |-
        docker build \
          --tag "$REGISTRY/$PROJECT_ID/docker/$IMAGE:$TAG_NAME-$SHORT_SHA" \
          --file dockerfile.build \
          --platform $PLATFORM \
          --build-arg RUNTIME_ENV="$RUNTIME_ENV" \
          --build-arg BUILD_CONFIG="$BUILD_CONFIG" \
          --build-arg SDK_IMAGE="$SDK_IMAGE:$DOTNET_VERSION" \
          --build-arg RUNTIME_IMAGE="$RUNTIME_IMAGE:$DOTNET_VERSION" \
          ./src/

  publish:

    needs: [build]
    name: "Publish"
    runs-on: ubuntu-latest
    environment: "prod"

    steps:

    # Setup gcloud cli, gke & docker
    - name: gCloud Auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'
    - name: Setup GKE
      uses: google-github-actions/get-gke-credentials@v1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GCP_SA_KEY }}
    - name: Setup Docker
      run: |-
        gcloud --quiet auth configure-docker $REGISTRY

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker image push "$REGISTRY/$PROJECT_ID/docker/$IMAGE:$TAG_NAME-$SHORT_SHA"

  deploy:

    needs: [publish]
    name: "deploy"
    runs-on: ubuntu-latest
    environment: "prod"

    steps:

    # Prepare kubectl manifests
    - name: Prepare manifests
      run: |-
        for file in ./deploy/prod/*.yaml; do \
          sed -e "s|<%TAG%>|$TAG_NAME-$SHORT_SHA|" $file >> ./deploy/prod-manifest.yaml; \
          echo -e "\n---\n" >> ./deploy/prod-manifest.yaml; \
        done

    # Deploy
    - name: Deploy to GKE
      run: |-
        kubectl apply -f ./deploy/prod-manifest.yaml